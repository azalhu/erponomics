syntax = "proto3";

package erponomics.manufacturing.v1.production_order;

import "erponomics/manufacturing/v1/production_order.proto";
import "google/api/client.proto";
import "google/api/http.proto";
import "google/longrunning/operations.proto";
import "google/protobuf/empty.proto";

service ProductionOrderCommandService {
  // Creates a new production order.
  rpc CreateProductionOrder(CreateProductionOrderRequest)
    returns (google.longrunning.Operation) {
    option (google.api.http) = {
      post: "/v1/productionOrders"
      body: "production_order"
    };
    option (google.api.method_signature) = "production_order";
    option (google.longrunning.operation_info) = {
      response_type: "ProductionOrder"
      metadata_type: "OperationMetadata"
    };
  }

  // Updates the given production order.
  rpc UpdateProductionOrder(UpdateProductionOrderRequest)
    returns (google.longrunning.Operation) {
    option (google.api.http) = {
      patch: "/v1/{production_order.name=productionOrders/*}"
      body: "production_order"
    };
    option (google.api.method_signature) = "production_order,update_mask";
    option (google.longrunning.operation_info) = {
      response_type: "ProductionOrder"
      metadata_type: "OperationMetadata"
    };
  }

  // Deletes the given production order.
  // This is only possible, if there are no transaction posted against the
  // production order.
  rpc DeleteProductionOrder(DeleteProductionOrderRequest)
    returns (google.longrunning.Operation) {
    option (google.api.http) = {
      delete: "/v1/{name=productionOrders/*}"
    };
    option (google.api.method_signature) = "name";
    option (google.longrunning.operation_info) = {
      response_type: "google.protobuf.Empty"
      metadata_type: "OperationMetadata"
    };
  }

  // Releases a production order.
  // This is only possible, if the production order is in a `Planned` state.
  rpc ReleaseProductionOrder(ReleaseProductionOrderRequest)
    returns (google.longrunning.Operation) {
    option (google.api.http) = {
      post: "/v1/{name=productionOrders/*}:release"
      body: "*"
    };
    option (google.longrunning.operation_info) = {
      response_type: "ReleaseProductionOrderResponse"
      metadata_type: "OperationMetadata"
    };
  }

  // Completes a production order.
  // This is only possible, if the production order is in a `Released` state,
  // and all operations have been completed.
  rpc CompleteProductionOrder(CompleteProductionOrderRequest)
    returns (google.longrunning.Operation) {
    option (google.api.http) = {
      post: "/v1/{name=productionOrders/*}:complete"
      body: "*"
    };
    option (google.longrunning.operation_info) = {
      response_type: "CompleteProductionOrderResponse"
      metadata_type: "OperationMetadata"
    };
  }

  // Finishes a production order.
  // This is only possible, if the production order is in a `Completed` state.
  rpc FinishProductionOrder(FinishProductionOrderRequest)
    returns (google.longrunning.Operation) {
    option (google.api.http) = {
      post: "/v1/{name=productionOrders/*}:finish"
      body: "*"
    };
    option (google.longrunning.operation_info) = {
      response_type: "FinishProductionOrderResponse"
      metadata_type: "OperationMetadata"
    };
  }

  // Cancels a production order.
  // This can be called in order to terminate the production order, despite its
  // current state.
  rpc CancelProductionOrder(CancelProductionOrderRequest)
    returns (google.longrunning.Operation) {
    option (google.api.http) = {
      post: "/v1/{name=productionOrders/*}:cancel"
      body: "*"
    };
    option (google.longrunning.operation_info) = {
      response_type: "CancelProductionOrderResponse"
      metadata_type: "OperationMetadata"
    };
  }

  message CreateProductionOrderRequest {
    // The ID to use for the production order, which will become the final
    // component of the production order's resource name.
    //
    // This value should be 4-63 characters, and valid characters
    // are /[a-z][0-9]-/.
    // Format: ^[a-z]([a-z0-9-]{2-61}[a-z0-9])?$
    string production_order_id = 1 [(google.api.field_behavior) = OPTIONAL];
 
    // The production order to create.
    ProductionOrder production_order = 2 [
      (google.api.field_behavior) = REQUIRED
      ];
  }

  message UpdateProductionOrderRequest {
    // The production order to update.
    //
    // The production order's `name` field is used to identify the
    // production order to update.
    // Format: productionOrders/{production_order}
    ProductionOrder production_order = 1 [
      (google.api.field_behavior) = REQUIRED
      ];

    // The list of fields to update.
    google.protobuf.FieldMask update_mask = 2 [
      (google.api.field_behavior) = OPTIONAL
      ];

    // The etag of the production order.
    // If this is provided, or the production order exists, it must match the
    // server's etag.
    string etag = 90 [(google.api.field_behavior) = OPTIONAL];

    // If set to true, and the production order is not found, a new
    // production order will be created.
    // In this situation, `update_mask` and `etag` are ignored.
    bool allow_missing = 91 [(google.api.field_behavior) = OPTIONAL];
  }

  message DeleteProductionOrderRequest {
    // The name of the production order to delete.
    // Format: productionOrders/{production_order}
    string name = 1 [
      (google.api.field_behavior) = REQUIRED,
      (google.api.resource_reference) = {
        type: "manufacturing.erponomics.com/ProductionOrder"
      }];

    // The etag of the production order.
    // If this is provided, or the production order exists, it must match the
    // server's etag.
    string etag = 90 [(google.api.field_behavior) = OPTIONAL];

    // If set to true, and the production order is not found, the request will
    // succeed but no action will be taken on the server.
    // In this situation, `etag` is ignored.
    bool allow_missing = 91 [(google.api.field_behavior) = OPTIONAL];
  }

  message ReleaseProductionOrderRequest {
    // The name of the production order to release.
    // Format: productionOrders/{production_order}
    string name = 1 [
      (google.api.field_behavior) = REQUIRED,
      (google.api.resource_reference) = {
        type: "manufacturing.erponomics.com/ProductionOrder"
      }];

    // The etag of the production order.
    // If this is provided, or the production order exists, it must match the
    // server's etag.
    string etag = 90 [(google.api.field_behavior) = OPTIONAL];

    // If set to true, and the production order is not in a `Planned` state,
    // the request will succeed but no action will be taken on the server.
    // In this situation, `etag` is ignored.
    bool allow_missing = 91 [(google.api.field_behavior) = OPTIONAL];
  }

  message CompleteProductionOrderRequest {
    // The name of the production order to complete.
    // Format: productionOrders/{production_order}
    string name = 1 [
      (google.api.field_behavior) = REQUIRED,
      (google.api.resource_reference) = {
        type: "manufacturing.erponomics.com/ProductionOrder"
      }];

    // The etag of the production order.
    // If this is provided, or the production order exists, it must match the
    // server's etag.
    string etag = 90 [(google.api.field_behavior) = OPTIONAL];

    // If set to true, and the production order is not in a `Released` state,
    // the request will succeed but no action will be taken on the server.
    // In this situation, `etag` is ignored.
    bool allow_missing = 91 [(google.api.field_behavior) = OPTIONAL];
  }

  message FinishProductionOrderRequest {
    // The name of the production order to finish.
    // Format: productionOrders/{production_order}
    string name = 1 [
      (google.api.field_behavior) = REQUIRED,
      (google.api.resource_reference) = {
        type: "manufacturing.erponomics.com/ProductionOrder"
      }];

    // The etag of the production order.
    // If this is provided, or the production order exists, it must match the
    // server's etag.
    string etag = 90 [(google.api.field_behavior) = OPTIONAL];

    // If set to true, and the production order is not in a `Completed` state,
    // the request will succeed but no action will be taken on the server.
    // In this situation, `etag` is ignored.
    bool allow_missing = 91 [(google.api.field_behavior) = OPTIONAL];

    // If set to true, the production order will be finished despite its
    // current state.
    // In this situation, `etag` is ignored.
    bool force = 92 [(google.api.field_behavior) = OPTIONAL];
  }

  message CancelProductionOrderRequest {
    // The name of the production order to cancel.
    // Format: productionOrders/{production_order}
    string name = 1 [
      (google.api.field_behavior) = REQUIRED,
      (google.api.resource_reference) = {
        type: "manufacturing.erponomics.com/ProductionOrder"
      }];

    // The etag of the production order.
    // If this is provided, or the production order exists, it must match the
    // server's etag.
    string etag = 90 [(google.api.field_behavior) = OPTIONAL];

    // If set to true, and the production order is not found, the request will
    // succeed but no action will be taken on the server.
    // In this situation, `etag` is ignored.
    bool allow_missing = 91 [(google.api.field_behavior) = OPTIONAL];

    // If set to true, the production order will be cancelled despite its
    // current state.
    // In this situation, `etag` is ignored.
    bool force = 92 [(google.api.field_behavior) = OPTIONAL];
  }
}
